
{% import "./form.twig" as forms %}


{% macro renderSet(obj, path, flag, index) %}
    {{ index }}
    {% set formItemKey = 'formItem' ~ index %}
    {% if flag == 'true' %}
    <template v-for="({{ formItemKey }}, key) in {{ obj }}">
        {% set defPath =   obj ~ '[key]'   %}
        <template v-if="{{ formItemKey }}.type !== 'array' ">
            <cm-field v-model="{{ path }}[key]"
                      :label="key" :prop="key"
                      :form-path="'{{ path }}.' + key"
                      :type="{{ formItemKey }}.type" ></cm-field>
        </template>
        <template v-if="{{ formItemKey }}.type === 'array' ">
            <template v-for="(subItem, subIndex) in {{ path }}[key]">
                {% set scopePath = path ~ '[key][subIndex]'  %}
                {% set objPath = defPath ~ '.items.properties' %}
{#                {{ objPath }} {% verbatim %}{{ {% endverbatim %} {{ objPath }} {% verbatim %} }} {% endverbatim %}#}
                {{ _self.renderSet(objPath, scopePath, "false", index + 1) }}
            </template>
        </template>
    </template>
    {% else %}
{#        {{ obj }} {{ path }}#}

{#        {% verbatim %} {{ {% endverbatim %} {{ obj }} {% verbatim %} }} {% endverbatim %}#}
        <template v-for="(subFormItem, subKey) in {{ obj }}">
            {% verbatim %}{{ key }}{% endverbatim %}

{#            {% verbatim %} {{ {% endverbatim %} {{ path[] }} {% verbatim %} }} {% endverbatim %}#}
            <cm-field v-model="{{ path }}[subKey]"
                      :label="subKey" :prop="subKey"
                      :form-path="'{{ path }}.' + subKey"
                      :type="subFormItem.type" ></cm-field>
        </template>
    {% endif %}
{% endmacro %}

{% macro formItem(modelPath) %}
    <template v-if="type === 'string'">
        {{forms.input(modelPath)}}
    </template>
    <template v-if="type === 'number'">
        {{forms.inputNumber(modelPath)}}
    </template>
    <template v-if="type === 'integer'">
        {{forms.inputNumber(modelPath)}}
    </template>
{% endmacro %}

{% macro fieldset(formDef, path) %}
    {% if formDef.type == 'object' %}
        {% for key , formItem in formDef.properties %}
                {% set scopeModelKey = path ~  key %}
                {% if formItem.type == 'string' %}
<el-form-item prop="{{key}}" model-path="{{ scopeModelKey }}" label="{{ key }}">
{{forms.input(scopeModelKey)}}
</el-form-item>
                {% endif %}
                {% if formItem.type == 'number' %}
<el-form-item prop="{{key}}" model-path="{{ scopeModelKey }}"  label="{{ key }}">
{{forms.inputNumber(scopeModelKey)}}
</el-form-item>
                {% endif %}
                {% if formItem.type == 'integer' %}
<el-form-item prop="{{key}}" model-path="{{ scopeModelKey }}"  label="{{ key }}">
                    {{forms.inputNumber(scopeModelKey)}}
</el-form-item>
                {% endif %}
                {% if formItem.type == 'boolean' %}
<el-form-item prop="{{key}}" model-path="{{ scopeModelKey }}"  label="{{ key }}">
                    {{forms.radioBoolean(scopeModelKey)}}
</el-form-item>
                {% endif %}
        {% endfor %}
    {% endif %}
{% endmacro %}
