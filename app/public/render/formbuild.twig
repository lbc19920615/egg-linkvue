
{% import "./macros/form.twig" as forms %}

<template>
  <div class="about">
  <el-form :model="model">
{% if source.formDef.type == 'object' %}
  {% for key , formItem in source.formDef.properties %}
    <el-form-item prop="{{key}}">
      {% if formItem.type == 'string' %}
        {% set foo = 'model.' ~  key %}
        {{forms.input1(foo)}}
      {% endif %}
    </el-form-item>
  {% endfor %}
{% endif %}
  </el-form>

  {% verbatim %}
    <h3>{{msg}}</h3>
  {% endverbatim %}
<ul ref="h1Dom">
  {% for i in source.testArr %}
    <li>{{ i }}</li>
{% endfor %}
</ul>
  </div>
</template>
<script>
export default {
  name: 'FormBuild',
  setup(props, ctx) {
    const { onMounted, ref, getCurrentInstance,  reactive} = global.Vue
    const internalInstance = getCurrentInstance()
    let msg = ref('')
    let h1Dom = ref(null);

    onMounted(() => {
      msg.value = 'about'
      console.log(
      internalInstance.appContext.config.globalProperties.$alConfig.get('sdsdsdddddddddddddd')
      )
    })

    const model = reactive({})

    return {
      msg,
      h1Dom,
      model
    }
  },
};
</script>

{% if config %}
<config>{{ config }}</config>
{% endif %}

<style>
</style>
