<template>
    <div class="z-page">
      <template v-if="page.inited">
{% verbatim %}
  <template v-if="renderC.state.refresh">
      <render-layout :map="renderC.state.currentLayoutMap"
                     :id="renderC.state.rootId"
                     :handleNext="renderC.handleNext"
                     :handleDefMap="handleDefMap"
                     :page="page">
{% endverbatim %}
{{CONFIG.layoutSlots}}
        {% verbatim %}
      </render-layout>
    </template>
{% endverbatim %}

      </template>
    </div>
</template>

<script>

  export default {
        setup() {

          let renderC = useRenderControl()
          {{ CONFIG.beforeScript }}

          let computed = {}
          let page = useControl({properties, computed}, {
            onInited
          })
          page = extendControl2Page(page)
          page = useAppPageControl(page)

          function setDefMap(obj, name = obj.name) {
            page.defMap.set(name, obj)
          }

          function handleDefMap(partName) {
            let stepMap = {
              test: 'process-step1'
            }
            let is = stepMap[partName]
            // console.log(partName)
            if (page.defMap.has(is)) {
              return page.defMap.get(is)
            }
            return '{}'
          }

          async function onInited({storeControl}) {
            {{ CONFIG.onInited }}
          }

          return {
            handleDefMap,
            page,
            renderC
          }
        }
    }
</script>
